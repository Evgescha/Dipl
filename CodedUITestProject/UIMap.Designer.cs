// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Открытие программы
        /// </summary>
        public void OpenProgramm()
        {
            #region Variable Declarations
            WinEdit uIИмениEdit = this.UIDebugWindow.UIItemWindow.UIDiplexeListItem.UIИмениEdit;
            #endregion

            // Двойной щелчок "Имени" надпись
            Mouse.DoubleClick(uIИмениEdit, new Point(10, 13));
        }
        
        /// <summary>
        /// Войти как сотрудник
        /// </summary>
        public void LoginEmployees()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIДобропожаловатьWindow.UITextBox1Window.UITextBox1Edit;
            WinEdit uITextBox2Edit = this.UIДобропожаловатьWindow.UITextBox2Window.UITextBox2Edit;
            WinButton uIВойтиButton = this.UIДобропожаловатьWindow.UIВойтиWindow.UIВойтиButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            #endregion

            // Тип "" в "textBox1" надпись
            uITextBox1Edit.Text = this.LoginEmployeesParams.UITextBox1EditText;

            // Тип "Alt + {LShiftKey}" в "textBox1" надпись
            Keyboard.SendKeys(uITextBox1Edit, this.LoginEmployeesParams.UITextBox1EditSendKeys, ModifierKeys.Alt);

            // Тип "empl" в "textBox1" надпись
            uITextBox1Edit.Text = this.LoginEmployeesParams.UITextBox1EditText1;

            // Щелкните "textBox2" надпись
            Mouse.Click(uITextBox2Edit, new Point(101, 22));

            // Тип "********" в "textBox2" надпись
            Keyboard.SendKeys(uITextBox2Edit, this.LoginEmployeesParams.UITextBox2EditSendKeys, true);

            // Щелкните "Войти" кнопка
            Mouse.Click(uIВойтиButton, new Point(93, 17));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(19, 5));
        }
        
        /// <summary>
        /// EmployeesAddNewClients - Используйте "EmployeesAddNewClientsParams" для передачи параметров в этот метод.
        /// </summary>
        public void EmployeesAddNewClients()
        {
            #region Variable Declarations
            WinButton uIДобавитьButton = this.UIРабочееместосотрудниWindow.UIДобавитьWindow.UIДобавитьButton;
            WinEdit uITextBox6Edit = this.UIКлиентWindow.UITextBox6Window.UITextBox6Edit;
            WinEdit uITextBox1Edit = this.UIКлиентWindow.UITextBox1Window.UITextBox1Edit;
            WinEdit uITextBox2Edit = this.UIКлиентWindow.UITextBox2Window.UITextBox2Edit;
            WinEdit uITextBox3Edit = this.UIКлиентWindow.UITextBox3Window.UITextBox3Edit;
            WinEdit uITextBox5Edit = this.UIКлиентWindow.UITextBox5Window.UITextBox5Edit;
            WinEdit uITextBox7Edit = this.UIКлиентWindow.UITextBox7Window.UITextBox7Edit;
            WinEdit uITextBox4Edit = this.UIКлиентWindow.UITextBox4Window.UITextBox4Edit;
            WinButton uIДобавитьButton1 = this.UIКлиентWindow.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            WinButton uIЗакрытьButton = this.UIКлиентWindow.UIКлиентTitleBar.UIЗакрытьButton;
            WinButton uIСбросButton = this.UIРабочееместосотрудниWindow.UIСбросWindow.UIСбросButton;
            #endregion

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(70, 14));

            // Тип "Фамильный" в "textBox6" надпись
            uITextBox6Edit.Text = this.EmployeesAddNewClientsParams.UITextBox6EditText;

            // Тип "Имя" в "textBox1" надпись
            uITextBox1Edit.Text = this.EmployeesAddNewClientsParams.UITextBox1EditText;

            // Тип "Отчествович" в "textBox2" надпись
            uITextBox2Edit.Text = this.EmployeesAddNewClientsParams.UITextBox2EditText;

            // Тип "375447898977" в "textBox3" надпись
            uITextBox3Edit.Text = this.EmployeesAddNewClientsParams.UITextBox3EditText;

            // Тип "МС5687498" в "textBox5" надпись
            uITextBox5Edit.Text = this.EmployeesAddNewClientsParams.UITextBox5EditText;

            // Тип "Адрес проживания" в "textBox7" надпись
            uITextBox7Edit.Text = this.EmployeesAddNewClientsParams.UITextBox7EditText;

            // Тип "Место работы" в "textBox4" надпись
            uITextBox4Edit.Text = this.EmployeesAddNewClientsParams.UITextBox4EditText;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton1, new Point(112, 8));

            // Тип "{Enter}" в "ОК" кнопка
            Keyboard.SendKeys(uIОКButton, this.EmployeesAddNewClientsParams.UIОКButtonSendKeys, ModifierKeys.None);

            // Тип "{Enter}" в "ОК" кнопка
            Keyboard.SendKeys(uIОКButton, this.EmployeesAddNewClientsParams.UIОКButtonSendKeys1, ModifierKeys.None);

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(16, 23));

            // Щелкните "Сброс" кнопка
            Mouse.Click(uIСбросButton, new Point(62, 16));
        }
        
        /// <summary>
        /// EmployeesDeleteClients
        /// </summary>
        public void EmployeesDeleteClients()
        {
            #region Variable Declarations
            WinCell uIФамильныйCell = this.UIРабочееместосотрудниWindow.UIDgvClientsWindow.UIDataGridViewTable.UIСтрока3Row.UIФамильныйCell;
            WinButton uIУдалитьButton = this.UIРабочееместосотрудниWindow.UIУдалитьWindow.UIУдалитьButton;
            WinButton uIДАButton = this.UIУдалениеWindow.UIДАWindow.UIДАButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            #endregion

            // Щелкните "Фамильный" ячейка
            Mouse.Click(uIФамильныйCell, new Point(61, 16));

            // Щелкните "Удалить" кнопка
            Mouse.Click(uIУдалитьButton, new Point(29, 10));

            // Щелкните "&Да" кнопка
            Mouse.Click(uIДАButton, new Point(65, 13));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(23, 13));
        }
        
        /// <summary>
        /// EmployeesAddNewContracts - Используйте "EmployeesAddNewContractsParams" для передачи параметров в этот метод.
        /// </summary>
        public void EmployeesAddNewContracts()
        {
            #region Variable Declarations
            WinTabPage uIАвтоTabPage = this.UIРабочееместосотрудниWindow.UITabControl1Window.UIАвтоTabPage;
            WinTabPage uIКлиентыTabPage = this.UIРабочееместосотрудниWindow.UITabControl1Window.UIКлиентыTabPage;
            WinButton uIОформитьButton = this.UIРабочееместосотрудниWindow.UIОформитьWindow.UIОформитьButton;
            WinEdit uITextBox7Edit = this.UIКонтрактWindow.UITextBox7Window.UITextBox7Edit;
            WinEdit uITextBox10Edit = this.UIКонтрактWindow.UITextBox10Window.UITextBox10Edit;
            WinButton uIСохранитьButton = this.UIКонтрактWindow.UIСохранитьWindow.UIСохранитьButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            #endregion

            // Щелкните "Авто" вкладка
            Mouse.Click(uIАвтоTabPage, new Point(17, 5));

            // Щелкните "Клиенты" вкладка
            Mouse.Click(uIКлиентыTabPage, new Point(36, 8));

            // Щелкните "Оформить" кнопка
            Mouse.Click(uIОформитьButton, new Point(12, 9));

            // Тип "15" в "textBox7" надпись
            uITextBox7Edit.Text = this.EmployeesAddNewContractsParams.UITextBox7EditText;

            // Тип "70" в "textBox10" надпись
            uITextBox10Edit.Text = this.EmployeesAddNewContractsParams.UITextBox10EditText;

            // Щелкните "Сохранить" кнопка
            Mouse.Click(uIСохранитьButton, new Point(83, 10));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(41, 11));
        }
        
        /// <summary>
        /// LogOut
        /// </summary>
        public void LogOut()
        {
            #region Variable Declarations
            WinButton uIЗакрытьButton = this.UIРабочееместосотрудниWindow.UIРабочееместосотрудниTitleBar.UIЗакрытьButton;
            #endregion

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(20, 20));
        }
        
        /// <summary>
        /// LoginEngineer - Используйте "LoginEngineerParams" для передачи параметров в этот метод.
        /// </summary>
        public void LoginEngineer()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIДобропожаловатьWindow.UITextBox1Window.UITextBox1Edit;
            WinEdit uITextBox2Edit = this.UIДобропожаловатьWindow.UITextBox2Window.UITextBox2Edit;
            WinButton uIВойтиButton = this.UIДобропожаловатьWindow.UIВойтиWindow.UIВойтиButton;
            WinControl uIItemDialog = this.UIItemWindow.UIItemWindow1.UIItemDialog;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            #endregion

            // Тип "eng" в "textBox1" надпись
            uITextBox1Edit.Text = this.LoginEngineerParams.UITextBox1EditText;

            // Тип "{Tab}" в "textBox1" надпись
            Keyboard.SendKeys(uITextBox1Edit, this.LoginEngineerParams.UITextBox1EditSendKeys, ModifierKeys.None);

            // Тип "********" в "textBox2" надпись
            Keyboard.SendKeys(uITextBox2Edit, this.LoginEngineerParams.UITextBox2EditSendKeys, true);

            // Щелкните "Войти" кнопка
            Mouse.Click(uIВойтиButton, new Point(90, 11));

            // Щелкните Dialog
            Mouse.Click(uIItemDialog, new Point(99, 67));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(52, 9));
        }
        
        /// <summary>
        /// EngineerAddNewAuto - Используйте "EngineerAddNewAutoParams" для передачи параметров в этот метод.
        /// </summary>
        public void EngineerAddNewAuto()
        {
            #region Variable Declarations
            WinButton uIДобавитьButton = this.UIРабочееместоинженераWindow.UIДобавитьWindow.UIДобавитьButton;
            WinComboBox uIComboBox1ComboBox = this.UIАвтоWindow.UIComboBox1Window.UIComboBox1ComboBox;
            WinEdit uITextBox2Edit = this.UIАвтоWindow.UITextBox2Window.UITextBox2Edit;
            WinEdit uITextBox3Edit = this.UIАвтоWindow.UITextBox3Window.UITextBox3Edit;
            WinList uIListBox1List = this.UIАвтоWindow.UIListBox1Window.UIListBox1List;
            WinEdit uITextBox7Edit = this.UIАвтоWindow.UITextBox7Window.UITextBox7Edit;
            WinEdit uITextBox6Edit = this.UIАвтоWindow.UITextBox6Window.UITextBox6Edit;
            WinEdit uITextBox5Edit = this.UIАвтоWindow.UITextBox5Window.UITextBox5Edit;
            WinEdit uITextBox4Edit = this.UIАвтоWindow.UITextBox4Window.UITextBox4Edit;
            WinEdit uITextBox8Edit = this.UIАвтоWindow.UITextBox8Window.UITextBox8Edit;
            WinEdit uITextBox9Edit = this.UIАвтоWindow.UITextBox9Window.UITextBox9Edit;
            WinEdit uITextBox10Edit = this.UIАвтоWindow.UITextBox10Window.UITextBox10Edit;
            WinEdit uITextBox11Edit = this.UIАвтоWindow.UITextBox11Window.UITextBox11Edit;
            WinButton uIСохранитьButton = this.UIАвтоWindow.UIСохранитьWindow.UIСохранитьButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            WinButton uIЗакрытьButton = this.UIАвтоWindow.UIАвтоTitleBar.UIЗакрытьButton;
            #endregion

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(51, 16));

            // Выберите "Asia" в "comboBox1" поле со списком
            uIComboBox1ComboBox.SelectedItem = this.EngineerAddNewAutoParams.UIComboBox1ComboBoxSelectedItem;

            // Тип "Asia MAX" в "textBox2" надпись
            uITextBox2Edit.Text = this.EngineerAddNewAutoParams.UITextBox2EditText;

            // Тип "2005" в "textBox3" надпись
            uITextBox3Edit.Text = this.EngineerAddNewAutoParams.UITextBox3EditText;

            // Выберите "Ручная" в "listBox1" список
            uIListBox1List.SelectedItemsAsString = this.EngineerAddNewAutoParams.UIListBox1ListSelectedItemsAsString;

            // Тип "14" в "textBox7" надпись
            uITextBox7Edit.Text = this.EngineerAddNewAutoParams.UITextBox7EditText;

            // Тип "1400" в "textBox6" надпись
            uITextBox6Edit.Text = this.EngineerAddNewAutoParams.UITextBox6EditText;

            // Тип "123" в "textBox5" надпись
            uITextBox5Edit.Text = this.EngineerAddNewAutoParams.UITextBox5EditText;

            // Тип "red" в "textBox4" надпись
            uITextBox4Edit.Text = this.EngineerAddNewAutoParams.UITextBox4EditText;

            // Тип "55" в "textBox8" надпись
            uITextBox8Edit.Text = this.EngineerAddNewAutoParams.UITextBox8EditText;

            // Тип "53" в "textBox9" надпись
            uITextBox9Edit.Text = this.EngineerAddNewAutoParams.UITextBox9EditText;

            // Тип "50" в "textBox10" надпись
            uITextBox10Edit.Text = this.EngineerAddNewAutoParams.UITextBox10EditText;

            // Тип "45" в "textBox11" надпись
            uITextBox11Edit.Text = this.EngineerAddNewAutoParams.UITextBox11EditText;

            // Щелкните "Сохранить" кнопка
            Mouse.Click(uIСохранитьButton, new Point(88, 13));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(32, 15));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(32, 14));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(14, 14));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(44, 9));

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(25, 22));
        }
        
        /// <summary>
        /// LoginAdmin - Используйте "LoginAdminParams" для передачи параметров в этот метод.
        /// </summary>
        public void LoginAdmin()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIДобропожаловатьWindow.UITextBox1Window.UITextBox1Edit;
            WinEdit uITextBox2Edit = this.UIДобропожаловатьWindow.UITextBox2Window.UITextBox2Edit;
            WinButton uIВойтиButton = this.UIДобропожаловатьWindow.UIВойтиWindow.UIВойтиButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            #endregion

            // Тип "admin" в "textBox1" надпись
            uITextBox1Edit.Text = this.LoginAdminParams.UITextBox1EditText;

            // Тип "{Tab}" в "textBox1" надпись
            Keyboard.SendKeys(uITextBox1Edit, this.LoginAdminParams.UITextBox1EditSendKeys, ModifierKeys.None);

            // Тип "********" в "textBox2" надпись
            Keyboard.SendKeys(uITextBox2Edit, this.LoginAdminParams.UITextBox2EditSendKeys, true);

            // Щелкните "Войти" кнопка
            Mouse.Click(uIВойтиButton, new Point(70, 4));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(28, 20));
        }
        
        #region Properties
        public virtual LoginEmployeesParams LoginEmployeesParams
        {
            get
            {
                if ((this.mLoginEmployeesParams == null))
                {
                    this.mLoginEmployeesParams = new LoginEmployeesParams();
                }
                return this.mLoginEmployeesParams;
            }
        }
        
        public virtual EmployeesAddNewClientsParams EmployeesAddNewClientsParams
        {
            get
            {
                if ((this.mEmployeesAddNewClientsParams == null))
                {
                    this.mEmployeesAddNewClientsParams = new EmployeesAddNewClientsParams();
                }
                return this.mEmployeesAddNewClientsParams;
            }
        }
        
        public virtual EmployeesAddNewContractsParams EmployeesAddNewContractsParams
        {
            get
            {
                if ((this.mEmployeesAddNewContractsParams == null))
                {
                    this.mEmployeesAddNewContractsParams = new EmployeesAddNewContractsParams();
                }
                return this.mEmployeesAddNewContractsParams;
            }
        }
        
        public virtual LoginEngineerParams LoginEngineerParams
        {
            get
            {
                if ((this.mLoginEngineerParams == null))
                {
                    this.mLoginEngineerParams = new LoginEngineerParams();
                }
                return this.mLoginEngineerParams;
            }
        }
        
        public virtual EngineerAddNewAutoParams EngineerAddNewAutoParams
        {
            get
            {
                if ((this.mEngineerAddNewAutoParams == null))
                {
                    this.mEngineerAddNewAutoParams = new EngineerAddNewAutoParams();
                }
                return this.mEngineerAddNewAutoParams;
            }
        }
        
        public virtual LoginAdminParams LoginAdminParams
        {
            get
            {
                if ((this.mLoginAdminParams == null))
                {
                    this.mLoginAdminParams = new LoginAdminParams();
                }
                return this.mLoginAdminParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIДобропожаловатьWindow UIДобропожаловатьWindow
        {
            get
            {
                if ((this.mUIДобропожаловатьWindow == null))
                {
                    this.mUIДобропожаловатьWindow = new UIДобропожаловатьWindow();
                }
                return this.mUIДобропожаловатьWindow;
            }
        }
        
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow();
                }
                return this.mUIОКWindow;
            }
        }
        
        public UIРабочееместосотрудниWindow UIРабочееместосотрудниWindow
        {
            get
            {
                if ((this.mUIРабочееместосотрудниWindow == null))
                {
                    this.mUIРабочееместосотрудниWindow = new UIРабочееместосотрудниWindow();
                }
                return this.mUIРабочееместосотрудниWindow;
            }
        }
        
        public UIКлиентWindow UIКлиентWindow
        {
            get
            {
                if ((this.mUIКлиентWindow == null))
                {
                    this.mUIКлиентWindow = new UIКлиентWindow();
                }
                return this.mUIКлиентWindow;
            }
        }
        
        public UIУдалениеWindow UIУдалениеWindow
        {
            get
            {
                if ((this.mUIУдалениеWindow == null))
                {
                    this.mUIУдалениеWindow = new UIУдалениеWindow();
                }
                return this.mUIУдалениеWindow;
            }
        }
        
        public UIКонтрактWindow UIКонтрактWindow
        {
            get
            {
                if ((this.mUIКонтрактWindow == null))
                {
                    this.mUIКонтрактWindow = new UIКонтрактWindow();
                }
                return this.mUIКонтрактWindow;
            }
        }
        
        public UIМастерактивацииMicroWindow UIМастерактивацииMicroWindow
        {
            get
            {
                if ((this.mUIМастерактивацииMicroWindow == null))
                {
                    this.mUIМастерактивацииMicroWindow = new UIМастерактивацииMicroWindow();
                }
                return this.mUIМастерактивацииMicroWindow;
            }
        }
        
        public UIAccessСбойактивациипWindow UIAccessСбойактивациипWindow
        {
            get
            {
                if ((this.mUIAccessСбойактивациипWindow == null))
                {
                    this.mUIAccessСбойактивациипWindow = new UIAccessСбойактивациипWindow();
                }
                return this.mUIAccessСбойактивациипWindow;
            }
        }
        
        public UIКонтрактWindow1 UIКонтрактWindow1
        {
            get
            {
                if ((this.mUIКонтрактWindow1 == null))
                {
                    this.mUIКонтрактWindow1 = new UIКонтрактWindow1();
                }
                return this.mUIКонтрактWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIРабочееместоинженераWindow UIРабочееместоинженераWindow
        {
            get
            {
                if ((this.mUIРабочееместоинженераWindow == null))
                {
                    this.mUIРабочееместоинженераWindow = new UIРабочееместоинженераWindow();
                }
                return this.mUIРабочееместоинженераWindow;
            }
        }
        
        public UIАвтоWindow UIАвтоWindow
        {
            get
            {
                if ((this.mUIАвтоWindow == null))
                {
                    this.mUIАвтоWindow = new UIАвтоWindow();
                }
                return this.mUIАвтоWindow;
            }
        }
        #endregion
        
        #region Fields
        private LoginEmployeesParams mLoginEmployeesParams;
        
        private EmployeesAddNewClientsParams mEmployeesAddNewClientsParams;
        
        private EmployeesAddNewContractsParams mEmployeesAddNewContractsParams;
        
        private LoginEngineerParams mLoginEngineerParams;
        
        private EngineerAddNewAutoParams mEngineerAddNewAutoParams;
        
        private LoginAdminParams mLoginAdminParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIДобропожаловатьWindow mUIДобропожаловатьWindow;
        
        private UIОКWindow mUIОКWindow;
        
        private UIРабочееместосотрудниWindow mUIРабочееместосотрудниWindow;
        
        private UIКлиентWindow mUIКлиентWindow;
        
        private UIУдалениеWindow mUIУдалениеWindow;
        
        private UIКонтрактWindow mUIКонтрактWindow;
        
        private UIМастерактивацииMicroWindow mUIМастерактивацииMicroWindow;
        
        private UIAccessСбойактивациипWindow mUIAccessСбойактивациипWindow;
        
        private UIКонтрактWindow1 mUIКонтрактWindow1;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UIРабочееместоинженераWindow mUIРабочееместоинженераWindow;
        
        private UIАвтоWindow mUIАвтоWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "LoginEmployees"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LoginEmployeesParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "";
        
        /// <summary>
        /// Тип "Alt + {LShiftKey}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{LShiftKey}";
        
        /// <summary>
        /// Тип "empl" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText1 = "empl";
        
        /// <summary>
        /// Тип "********" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditSendKeys = "b0JKt4/HANxjhsLd4ijRPDe+RDiTLVKc";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "EmployeesAddNewClients"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeesAddNewClientsParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Фамильный" в "textBox6" надпись
        /// </summary>
        public string UITextBox6EditText = "Фамильный";
        
        /// <summary>
        /// Тип "Имя" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "Имя";
        
        /// <summary>
        /// Тип "Отчествович" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditText = "Отчествович";
        
        /// <summary>
        /// Тип "375447898977" в "textBox3" надпись
        /// </summary>
        public string UITextBox3EditText = "375447898977";
        
        /// <summary>
        /// Тип "МС5687498" в "textBox5" надпись
        /// </summary>
        public string UITextBox5EditText = "МС5687498";
        
        /// <summary>
        /// Тип "Адрес проживания" в "textBox7" надпись
        /// </summary>
        public string UITextBox7EditText = "Адрес проживания";
        
        /// <summary>
        /// Тип "Место работы" в "textBox4" надпись
        /// </summary>
        public string UITextBox4EditText = "Место работы";
        
        /// <summary>
        /// Тип "{Enter}" в "ОК" кнопка
        /// </summary>
        public string UIОКButtonSendKeys = "{Enter}";
        
        /// <summary>
        /// Тип "{Enter}" в "ОК" кнопка
        /// </summary>
        public string UIОКButtonSendKeys1 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "EmployeesAddNewContracts"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeesAddNewContractsParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "15" в "textBox7" надпись
        /// </summary>
        public string UITextBox7EditText = "15";
        
        /// <summary>
        /// Тип "70" в "textBox10" надпись
        /// </summary>
        public string UITextBox10EditText = "70";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "LoginEngineer"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LoginEngineerParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "eng" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "eng";
        
        /// <summary>
        /// Тип "{Tab}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Тип "********" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditSendKeys = "euX4sCJh368ZqJJ3VFBGEQij0rqbhb8gcMgBUbIlCRgoZoCM3Zp7NGqdYfZBYsscsupJ+WJ6oxciYv/Kd" +
            "uFoFIc4CquCh5J5np5K6ke5GyMj7zRx1GmsQX4A83mtNvQe8jefcD3hXIoNtHLMNN2gtWFjixPiHPsjN" +
            "iSlqVq1kpQ=";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "EngineerAddNewAuto"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EngineerAddNewAutoParams
    {
        
        #region Fields
        /// <summary>
        /// Выберите "Asia" в "comboBox1" поле со списком
        /// </summary>
        public string UIComboBox1ComboBoxSelectedItem = "Asia";
        
        /// <summary>
        /// Тип "Asia MAX" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditText = "Asia MAX";
        
        /// <summary>
        /// Тип "2005" в "textBox3" надпись
        /// </summary>
        public string UITextBox3EditText = "2005";
        
        /// <summary>
        /// Выберите "Ручная" в "listBox1" список
        /// </summary>
        public string UIListBox1ListSelectedItemsAsString = "Ручная";
        
        /// <summary>
        /// Тип "14" в "textBox7" надпись
        /// </summary>
        public string UITextBox7EditText = "14";
        
        /// <summary>
        /// Тип "1400" в "textBox6" надпись
        /// </summary>
        public string UITextBox6EditText = "1400";
        
        /// <summary>
        /// Тип "123" в "textBox5" надпись
        /// </summary>
        public string UITextBox5EditText = "123";
        
        /// <summary>
        /// Тип "red" в "textBox4" надпись
        /// </summary>
        public string UITextBox4EditText = "red";
        
        /// <summary>
        /// Тип "55" в "textBox8" надпись
        /// </summary>
        public string UITextBox8EditText = "55";
        
        /// <summary>
        /// Тип "53" в "textBox9" надпись
        /// </summary>
        public string UITextBox9EditText = "53";
        
        /// <summary>
        /// Тип "50" в "textBox10" надпись
        /// </summary>
        public string UITextBox10EditText = "50";
        
        /// <summary>
        /// Тип "45" в "textBox11" надпись
        /// </summary>
        public string UITextBox11EditText = "45";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "LoginAdmin"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LoginAdminParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "admin" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "admin";
        
        /// <summary>
        /// Тип "{Tab}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Тип "********" в "textBox2" надпись
        /// </summary>
        public string UITextBox2EditSendKeys = "euX4sCJh368ZqJJ3VFBGEQij0rqbhb8gcMgBUbIlCRgoZoCM3Zp7NGqdYfZBYsscsupJ+WJ6oxcqTuHFE" +
            "3XSOrSZ7jNyFNIPvj4lwhB2aJ8=";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIShellViewWindow UIShellViewWindow
        {
            get
            {
                if ((this.mUIShellViewWindow == null))
                {
                    this.mUIShellViewWindow = new UIShellViewWindow(this);
                }
                return this.mUIShellViewWindow;
            }
        }
        
        public UIDebugTitleBar UIDebugTitleBar
        {
            get
            {
                if ((this.mUIDebugTitleBar == null))
                {
                    this.mUIDebugTitleBar = new UIDebugTitleBar(this);
                }
                return this.mUIDebugTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIShellViewWindow mUIShellViewWindow;
        
        private UIDebugTitleBar mUIDebugTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIDiplexeListItem UIDiplexeListItem
        {
            get
            {
                if ((this.mUIDiplexeListItem == null))
                {
                    this.mUIDiplexeListItem = new UIDiplexeListItem(this);
                }
                return this.mUIDiplexeListItem;
            }
        }
        
        public UIDBaccdbListItem UIDBaccdbListItem
        {
            get
            {
                if ((this.mUIDBaccdbListItem == null))
                {
                    this.mUIDBaccdbListItem = new UIDBaccdbListItem(this);
                }
                return this.mUIDBaccdbListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDiplexeListItem mUIDiplexeListItem;
        
        private UIDBaccdbListItem mUIDBaccdbListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDiplexeListItem : WinListItem
    {
        
        public UIDiplexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Dipl.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмениEdit
        {
            get
            {
                if ((this.mUIИмениEdit == null))
                {
                    this.mUIИмениEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмениEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имени";
                    this.mUIИмениEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмениEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмениEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDBaccdbListItem : WinListItem
    {
        
        public UIDBaccdbListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "DB.accdb";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмениEdit
        {
            get
            {
                if ((this.mUIИмениEdit == null))
                {
                    this.mUIИмениEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмениEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имени";
                    this.mUIИмениEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмениEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмениEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIShellViewWindow : WinWindow
    {
        
        public UIShellViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ShellView";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SHELLDLL_DefView";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIShellViewClient UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient(this);
                }
                return this.mUIShellViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIShellViewClient mUIShellViewClient;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIShellViewClient : WinClient
    {
        
        public UIShellViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "Просмотр папок оболочки";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinList UIПросмотрэлементовList
        {
            get
            {
                if ((this.mUIПросмотрэлементовList == null))
                {
                    this.mUIПросмотрэлементовList = new WinList(this);
                    #region Условия поиска
                    this.mUIПросмотрэлементовList.SearchProperties[WinList.PropertyNames.Name] = "Просмотр элементов";
                    this.mUIПросмотрэлементовList.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIПросмотрэлементовList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIПросмотрэлементовList;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDebugTitleBar : WinTitleBar
    {
        
        public UIDebugTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinButton UIСвернутьButton
        {
            get
            {
                if ((this.mUIСвернутьButton == null))
                {
                    this.mUIСвернутьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСвернутьButton.SearchProperties[WinButton.PropertyNames.Name] = "Свернуть";
                    this.mUIСвернутьButton.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIСвернутьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСвернутьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДобропожаловатьWindow : WinWindow
    {
        
        public UIДобропожаловатьWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Добро пожаловать";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Добро пожаловать");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UITextBox2Window UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UIВойтиWindow UIВойтиWindow
        {
            get
            {
                if ((this.mUIВойтиWindow == null))
                {
                    this.mUIВойтиWindow = new UIВойтиWindow(this);
                }
                return this.mUIВойтиWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window mUITextBox1Window;
        
        private UITextBox2Window mUITextBox2Window;
        
        private UIВойтиWindow mUIВойтиWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Добро пожаловать");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Пароль";
                    this.mUITextBox1Edit.WindowTitles.Add("Добро пожаловать");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox2Window : WinWindow
    {
        
        public UITextBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Добро пожаловать");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.WindowTitles.Add("Добро пожаловать");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВойтиWindow : WinWindow
    {
        
        public UIВойтиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Добро пожаловать");
            #endregion
        }
        
        #region Properties
        public WinButton UIВойтиButton
        {
            get
            {
                if ((this.mUIВойтиButton == null))
                {
                    this.mUIВойтиButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВойтиButton.SearchProperties[WinButton.PropertyNames.Name] = "Войти";
                    this.mUIВойтиButton.WindowTitles.Add("Добро пожаловать");
                    #endregion
                }
                return this.mUIВойтиButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВойтиButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIРабочееместосотрудниWindow : WinWindow
    {
        
        public UIРабочееместосотрудниWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Рабочее место сотрудника";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public UIДобавитьWindow UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UIСбросWindow UIСбросWindow
        {
            get
            {
                if ((this.mUIСбросWindow == null))
                {
                    this.mUIСбросWindow = new UIСбросWindow(this);
                }
                return this.mUIСбросWindow;
            }
        }
        
        public UIDgvClientsWindow UIDgvClientsWindow
        {
            get
            {
                if ((this.mUIDgvClientsWindow == null))
                {
                    this.mUIDgvClientsWindow = new UIDgvClientsWindow(this);
                }
                return this.mUIDgvClientsWindow;
            }
        }
        
        public UIУдалитьWindow UIУдалитьWindow
        {
            get
            {
                if ((this.mUIУдалитьWindow == null))
                {
                    this.mUIУдалитьWindow = new UIУдалитьWindow(this);
                }
                return this.mUIУдалитьWindow;
            }
        }
        
        public UITabControl1Window UITabControl1Window
        {
            get
            {
                if ((this.mUITabControl1Window == null))
                {
                    this.mUITabControl1Window = new UITabControl1Window(this);
                }
                return this.mUITabControl1Window;
            }
        }
        
        public UIОформитьWindow UIОформитьWindow
        {
            get
            {
                if ((this.mUIОформитьWindow == null))
                {
                    this.mUIОформитьWindow = new UIОформитьWindow(this);
                }
                return this.mUIОформитьWindow;
            }
        }
        
        public UIРабочееместосотрудниTitleBar UIРабочееместосотрудниTitleBar
        {
            get
            {
                if ((this.mUIРабочееместосотрудниTitleBar == null))
                {
                    this.mUIРабочееместосотрудниTitleBar = new UIРабочееместосотрудниTitleBar(this);
                }
                return this.mUIРабочееместосотрудниTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIДобавитьWindow mUIДобавитьWindow;
        
        private UIСбросWindow mUIСбросWindow;
        
        private UIDgvClientsWindow mUIDgvClientsWindow;
        
        private UIУдалитьWindow mUIУдалитьWindow;
        
        private UITabControl1Window mUITabControl1Window;
        
        private UIОформитьWindow mUIОформитьWindow;
        
        private UIРабочееместосотрудниTitleBar mUIРабочееместосотрудниTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДобавитьWindow : WinWindow
    {
        
        public UIДобавитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button5";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСбросWindow : WinWindow
    {
        
        public UIСбросWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button3";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinButton UIСбросButton
        {
            get
            {
                if ((this.mUIСбросButton == null))
                {
                    this.mUIСбросButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСбросButton.SearchProperties[WinButton.PropertyNames.Name] = "Сброс";
                    this.mUIСбросButton.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIСбросButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСбросButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDgvClientsWindow : WinWindow
    {
        
        public UIDgvClientsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgvClients";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public UIСтрока2Row UIСтрока2Row
        {
            get
            {
                if ((this.mUIСтрока2Row == null))
                {
                    this.mUIСтрока2Row = new UIСтрока2Row(this);
                }
                return this.mUIСтрока2Row;
            }
        }
        
        public UIСтрока1Row UIСтрока1Row
        {
            get
            {
                if ((this.mUIСтрока1Row == null))
                {
                    this.mUIСтрока1Row = new UIСтрока1Row(this);
                }
                return this.mUIСтрока1Row;
            }
        }
        
        public UIСтрока0Row UIСтрока0Row
        {
            get
            {
                if ((this.mUIСтрока0Row == null))
                {
                    this.mUIСтрока0Row = new UIСтрока0Row(this);
                }
                return this.mUIСтрока0Row;
            }
        }
        
        public UIВерхняястрокаRow UIВерхняястрокаRow
        {
            get
            {
                if ((this.mUIВерхняястрокаRow == null))
                {
                    this.mUIВерхняястрокаRow = new UIВерхняястрокаRow(this);
                }
                return this.mUIВерхняястрокаRow;
            }
        }
        
        public UIСтрока3Row UIСтрока3Row
        {
            get
            {
                if ((this.mUIСтрока3Row == null))
                {
                    this.mUIСтрока3Row = new UIСтрока3Row(this);
                }
                return this.mUIСтрока3Row;
            }
        }
        #endregion
        
        #region Fields
        private UIСтрока2Row mUIСтрока2Row;
        
        private UIСтрока1Row mUIСтрока1Row;
        
        private UIСтрока0Row mUIСтрока0Row;
        
        private UIВерхняястрокаRow mUIВерхняястрокаRow;
        
        private UIСтрока3Row mUIСтрока3Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСтрока2Row : WinRow
    {
        
        public UIСтрока2Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = "Фамильный;имя;отечественный;65465464;5464654";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinCell UIФамильныйCell
        {
            get
            {
                if ((this.mUIФамильныйCell == null))
                {
                    this.mUIФамильныйCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIФамильныйCell.SearchProperties[WinCell.PropertyNames.Value] = "Фамильный";
                    this.mUIФамильныйCell.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIФамильныйCell;
            }
        }
        
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Условия поиска
                    this.mUIItemRowHeader.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIФамильныйCell;
        
        private WinRowHeader mUIItemRowHeader;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСтрока1Row : WinRow
    {
        
        public UIСтрока1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = "Иванов;Иван;Иванович;АВ887854;375868798485";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinCell UIИвановCell
        {
            get
            {
                if ((this.mUIИвановCell == null))
                {
                    this.mUIИвановCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIИвановCell.SearchProperties[WinCell.PropertyNames.Value] = "Иванов";
                    this.mUIИвановCell.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIИвановCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIИвановCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСтрока0Row : WinRow
    {
        
        public UIСтрока0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = "Егоров;Антон;Дмитриевич;СД5498726;375447898765";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinCell UIЕгоровCell
        {
            get
            {
                if ((this.mUIЕгоровCell == null))
                {
                    this.mUIЕгоровCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIЕгоровCell.SearchProperties[WinCell.PropertyNames.Value] = "Егоров";
                    this.mUIЕгоровCell.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIЕгоровCell;
            }
        }
        
        public WinCell UIАнтонCell
        {
            get
            {
                if ((this.mUIАнтонCell == null))
                {
                    this.mUIАнтонCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIАнтонCell.SearchProperties[WinCell.PropertyNames.Value] = "Антон";
                    this.mUIАнтонCell.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIАнтонCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIЕгоровCell;
        
        private WinCell mUIАнтонCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВерхняястрокаRow : WinRow
    {
        
        public UIВерхняястрокаRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Name] = "Верхняя строка";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinColumnHeader UIЯчейкалевоговерхнегоColumnHeader
        {
            get
            {
                if ((this.mUIЯчейкалевоговерхнегоColumnHeader == null))
                {
                    this.mUIЯчейкалевоговерхнегоColumnHeader = new WinColumnHeader(this);
                    #region Условия поиска
                    this.mUIЯчейкалевоговерхнегоColumnHeader.SearchProperties[WinControl.PropertyNames.Name] = "Ячейка левого верхнего заголовка";
                    this.mUIЯчейкалевоговерхнегоColumnHeader.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIЯчейкалевоговерхнегоColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private WinColumnHeader mUIЯчейкалевоговерхнегоColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСтрока3Row : WinRow
    {
        
        public UIСтрока3Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Name] = "Строка 3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinCell UIФамильныйCell
        {
            get
            {
                if ((this.mUIФамильныйCell == null))
                {
                    this.mUIФамильныйCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIФамильныйCell.SearchProperties[WinCell.PropertyNames.Value] = "Фамильный";
                    this.mUIФамильныйCell.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIФамильныйCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIФамильныйCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIУдалитьWindow : WinWindow
    {
        
        public UIУдалитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button7";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinButton UIУдалитьButton
        {
            get
            {
                if ((this.mUIУдалитьButton == null))
                {
                    this.mUIУдалитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIУдалитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Удалить";
                    this.mUIУдалитьButton.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIУдалитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIУдалитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITabControl1Window : WinWindow
    {
        
        public UITabControl1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tabControl1";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIАвтоTabPage
        {
            get
            {
                if ((this.mUIАвтоTabPage == null))
                {
                    this.mUIАвтоTabPage = new WinTabPage(this);
                    #region Условия поиска
                    this.mUIАвтоTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Авто";
                    this.mUIАвтоTabPage.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIАвтоTabPage;
            }
        }
        
        public WinTabPage UIКлиентыTabPage
        {
            get
            {
                if ((this.mUIКлиентыTabPage == null))
                {
                    this.mUIКлиентыTabPage = new WinTabPage(this);
                    #region Условия поиска
                    this.mUIКлиентыTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Клиенты";
                    this.mUIКлиентыTabPage.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIКлиентыTabPage;
            }
        }
        
        public WinTabList UITabControl1TabList
        {
            get
            {
                if ((this.mUITabControl1TabList == null))
                {
                    this.mUITabControl1TabList = new WinTabList(this);
                    #region Условия поиска
                    this.mUITabControl1TabList.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUITabControl1TabList;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIАвтоTabPage;
        
        private WinTabPage mUIКлиентыTabPage;
        
        private WinTabList mUITabControl1TabList;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIОформитьWindow : WinWindow
    {
        
        public UIОформитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button8";
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinButton UIОформитьButton
        {
            get
            {
                if ((this.mUIОформитьButton == null))
                {
                    this.mUIОформитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОформитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Оформить";
                    this.mUIОформитьButton.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIОформитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОформитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIРабочееместосотрудниTitleBar : WinTitleBar
    {
        
        public UIРабочееместосотрудниTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Рабочее место сотрудника");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Рабочее место сотрудника");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКлиентWindow : WinWindow
    {
        
        public UIКлиентWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Клиент";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public UITextBox6Window UITextBox6Window
        {
            get
            {
                if ((this.mUITextBox6Window == null))
                {
                    this.mUITextBox6Window = new UITextBox6Window(this);
                }
                return this.mUITextBox6Window;
            }
        }
        
        public UITextBox1Window1 UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window1(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UITextBox2Window1 UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window1(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UITextBox3Window UITextBox3Window
        {
            get
            {
                if ((this.mUITextBox3Window == null))
                {
                    this.mUITextBox3Window = new UITextBox3Window(this);
                }
                return this.mUITextBox3Window;
            }
        }
        
        public UITextBox5Window UITextBox5Window
        {
            get
            {
                if ((this.mUITextBox5Window == null))
                {
                    this.mUITextBox5Window = new UITextBox5Window(this);
                }
                return this.mUITextBox5Window;
            }
        }
        
        public UITextBox7Window UITextBox7Window
        {
            get
            {
                if ((this.mUITextBox7Window == null))
                {
                    this.mUITextBox7Window = new UITextBox7Window(this);
                }
                return this.mUITextBox7Window;
            }
        }
        
        public UITextBox4Window UITextBox4Window
        {
            get
            {
                if ((this.mUITextBox4Window == null))
                {
                    this.mUITextBox4Window = new UITextBox4Window(this);
                }
                return this.mUITextBox4Window;
            }
        }
        
        public UIДобавитьWindow1 UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow1(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UIКлиентTitleBar UIКлиентTitleBar
        {
            get
            {
                if ((this.mUIКлиентTitleBar == null))
                {
                    this.mUIКлиентTitleBar = new UIКлиентTitleBar(this);
                }
                return this.mUIКлиентTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox6Window mUITextBox6Window;
        
        private UITextBox1Window1 mUITextBox1Window;
        
        private UITextBox2Window1 mUITextBox2Window;
        
        private UITextBox3Window mUITextBox3Window;
        
        private UITextBox5Window mUITextBox5Window;
        
        private UITextBox7Window mUITextBox7Window;
        
        private UITextBox4Window mUITextBox4Window;
        
        private UIДобавитьWindow1 mUIДобавитьWindow;
        
        private UIКлиентTitleBar mUIКлиентTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox6Window : WinWindow
    {
        
        public UITextBox6Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox6";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox6Edit
        {
            get
            {
                if ((this.mUITextBox6Edit == null))
                {
                    this.mUITextBox6Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox6Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox6Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox6Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox1Window1 : WinWindow
    {
        
        public UITextBox1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox2Window1 : WinWindow
    {
        
        public UITextBox2Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUITextBox2Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox3Window : WinWindow
    {
        
        public UITextBox3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox3";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox3Edit
        {
            get
            {
                if ((this.mUITextBox3Edit == null))
                {
                    this.mUITextBox3Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox3Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Отчество";
                    this.mUITextBox3Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox3Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox3Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox5Window : WinWindow
    {
        
        public UITextBox5Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox5";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox5Edit
        {
            get
            {
                if ((this.mUITextBox5Edit == null))
                {
                    this.mUITextBox5Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox5Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Телефон";
                    this.mUITextBox5Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox5Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox5Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox7Window : WinWindow
    {
        
        public UITextBox7Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox7";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox7Edit
        {
            get
            {
                if ((this.mUITextBox7Edit == null))
                {
                    this.mUITextBox7Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox7Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Пасспорт";
                    this.mUITextBox7Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox7Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox7Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox4Window : WinWindow
    {
        
        public UITextBox4Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox4";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox4Edit
        {
            get
            {
                if ((this.mUITextBox4Edit == null))
                {
                    this.mUITextBox4Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox4Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Адрес проживания";
                    this.mUITextBox4Edit.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUITextBox4Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox4Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДобавитьWindow1 : WinWindow
    {
        
        public UIДобавитьWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button5";
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКлиентTitleBar : WinTitleBar
    {
        
        public UIКлиентTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Клиент");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Клиент");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIУдалениеWindow : WinWindow
    {
        
        public UIУдалениеWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Удаление";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Удаление");
            #endregion
        }
        
        #region Properties
        public UIДАWindow UIДАWindow
        {
            get
            {
                if ((this.mUIДАWindow == null))
                {
                    this.mUIДАWindow = new UIДАWindow(this);
                }
                return this.mUIДАWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIДАWindow mUIДАWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДАWindow : WinWindow
    {
        
        public UIДАWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Удаление");
            #endregion
        }
        
        #region Properties
        public WinButton UIДАButton
        {
            get
            {
                if ((this.mUIДАButton == null))
                {
                    this.mUIДАButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДАButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mUIДАButton.WindowTitles.Add("Удаление");
                    #endregion
                }
                return this.mUIДАButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДАButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКонтрактWindow : WinWindow
    {
        
        public UIКонтрактWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Контракт";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Контракт");
            #endregion
        }
        
        #region Properties
        public UITextBox7Window1 UITextBox7Window
        {
            get
            {
                if ((this.mUITextBox7Window == null))
                {
                    this.mUITextBox7Window = new UITextBox7Window1(this);
                }
                return this.mUITextBox7Window;
            }
        }
        
        public UITextBox10Window UITextBox10Window
        {
            get
            {
                if ((this.mUITextBox10Window == null))
                {
                    this.mUITextBox10Window = new UITextBox10Window(this);
                }
                return this.mUITextBox10Window;
            }
        }
        
        public UIСохранитьWindow UIСохранитьWindow
        {
            get
            {
                if ((this.mUIСохранитьWindow == null))
                {
                    this.mUIСохранитьWindow = new UIСохранитьWindow(this);
                }
                return this.mUIСохранитьWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox7Window1 mUITextBox7Window;
        
        private UITextBox10Window mUITextBox10Window;
        
        private UIСохранитьWindow mUIСохранитьWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox7Window1 : WinWindow
    {
        
        public UITextBox7Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox7";
            this.WindowTitles.Add("Контракт");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox7Edit
        {
            get
            {
                if ((this.mUITextBox7Edit == null))
                {
                    this.mUITextBox7Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox7Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Цены";
                    this.mUITextBox7Edit.WindowTitles.Add("Контракт");
                    #endregion
                }
                return this.mUITextBox7Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox7Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox10Window : WinWindow
    {
        
        public UITextBox10Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox10";
            this.WindowTitles.Add("Контракт");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox10Edit
        {
            get
            {
                if ((this.mUITextBox10Edit == null))
                {
                    this.mUITextBox10Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox10Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Необходимый аванс";
                    this.mUITextBox10Edit.WindowTitles.Add("Контракт");
                    #endregion
                }
                return this.mUITextBox10Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox10Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСохранитьWindow : WinWindow
    {
        
        public UIСохранитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button5";
            this.WindowTitles.Add("Контракт");
            #endregion
        }
        
        #region Properties
        public WinButton UIСохранитьButton
        {
            get
            {
                if ((this.mUIСохранитьButton == null))
                {
                    this.mUIСохранитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСохранитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Сохранить";
                    this.mUIСохранитьButton.WindowTitles.Add("Контракт");
                    #endregion
                }
                return this.mUIСохранитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСохранитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIМастерактивацииMicroWindow : WinWindow
    {
        
        public UIМастерактивацииMicroWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Мастер активации Microsoft Office";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NUIDialog";
            this.WindowTitles.Add("Мастер активации Microsoft Office");
            #endregion
        }
        
        #region Properties
        public UIМастерактивацииMicroDialog UIМастерактивацииMicroDialog
        {
            get
            {
                if ((this.mUIМастерактивацииMicroDialog == null))
                {
                    this.mUIМастерактивацииMicroDialog = new UIМастерактивацииMicroDialog(this);
                }
                return this.mUIМастерактивацииMicroDialog;
            }
        }
        #endregion
        
        #region Fields
        private UIМастерактивацииMicroDialog mUIМастерактивацииMicroDialog;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIМастерактивацииMicroDialog : WinControl
    {
        
        public UIМастерактивацииMicroDialog(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Мастер активации Microsoft Office";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
            this.WindowTitles.Add("Мастер активации Microsoft Office");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Мастер активации Microsoft Office");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIAccessСбойактивациипWindow : WinWindow
    {
        
        public UIAccessСбойактивациипWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Access (Сбой активации продукта)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "OMain";
            this.WindowTitles.Add("Access (Сбой активации продукта)");
            #endregion
        }
        
        #region Properties
        public UIТаблицыClient UIТаблицыClient
        {
            get
            {
                if ((this.mUIТаблицыClient == null))
                {
                    this.mUIТаблицыClient = new UIТаблицыClient(this);
                }
                return this.mUIТаблицыClient;
            }
        }
        
        public UIВкладкидокументовTabList UIВкладкидокументовTabList
        {
            get
            {
                if ((this.mUIВкладкидокументовTabList == null))
                {
                    this.mUIВкладкидокументовTabList = new UIВкладкидокументовTabList(this);
                }
                return this.mUIВкладкидокументовTabList;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIТаблицыClient mUIТаблицыClient;
        
        private UIВкладкидокументовTabList mUIВкладкидокументовTabList;
        
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIТаблицыClient : WinClient
    {
        
        public UIТаблицыClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "Таблицы";
            this.WindowTitles.Add("Access (Сбой активации продукта)");
            #endregion
        }
        
        #region Properties
        public WinButton UIContractsButton
        {
            get
            {
                if ((this.mUIContractsButton == null))
                {
                    this.mUIContractsButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIContractsButton.SearchProperties[WinButton.PropertyNames.Name] = "contracts";
                    this.mUIContractsButton.WindowTitles.Add("Access (Сбой активации продукта)");
                    #endregion
                }
                return this.mUIContractsButton;
            }
        }
        
        public WinButton UIPricesButton
        {
            get
            {
                if ((this.mUIPricesButton == null))
                {
                    this.mUIPricesButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIPricesButton.SearchProperties[WinButton.PropertyNames.Name] = "prices";
                    this.mUIPricesButton.WindowTitles.Add("Access (Сбой активации продукта)");
                    #endregion
                }
                return this.mUIPricesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIContractsButton;
        
        private WinButton mUIPricesButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВкладкидокументовTabList : WinTabList
    {
        
        public UIВкладкидокументовTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Вкладки документов";
            this.WindowTitles.Add("Access (Сбой активации продукта)");
            #endregion
        }
        
        #region Properties
        public WinButton UIВкладкаcontractsButton
        {
            get
            {
                if ((this.mUIВкладкаcontractsButton == null))
                {
                    this.mUIВкладкаcontractsButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВкладкаcontractsButton.SearchProperties[WinButton.PropertyNames.Name] = "Вкладка \'\'contracts\'\'";
                    this.mUIВкладкаcontractsButton.WindowTitles.Add("Access (Сбой активации продукта)");
                    #endregion
                }
                return this.mUIВкладкаcontractsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВкладкаcontractsButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Access (Сбой активации продукта)");
            #endregion
        }
        
        #region Properties
        public UIRibbonPropertyPage UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPropertyPage mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIRibbonPropertyPage : WinControl
    {
        
        public UIRibbonPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Access (Сбой активации продукта)");
            #endregion
        }
        
        #region Properties
        public WinButton UIСвернутьButton
        {
            get
            {
                if ((this.mUIСвернутьButton == null))
                {
                    this.mUIСвернутьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСвернутьButton.SearchProperties[WinButton.PropertyNames.Name] = "Свернуть";
                    this.mUIСвернутьButton.WindowTitles.Add("Access (Сбой активации продукта)");
                    #endregion
                }
                return this.mUIСвернутьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСвернутьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКонтрактWindow1 : WinWindow
    {
        
        public UIКонтрактWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Контракт";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Контракт");
            #endregion
        }
        
        #region Properties
        public UIКонтрактClient UIКонтрактClient
        {
            get
            {
                if ((this.mUIКонтрактClient == null))
                {
                    this.mUIКонтрактClient = new UIКонтрактClient(this);
                }
                return this.mUIКонтрактClient;
            }
        }
        #endregion
        
        #region Fields
        private UIКонтрактClient mUIКонтрактClient;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКонтрактClient : WinClient
    {
        
        public UIКонтрактClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "Контракт";
            this.WindowTitles.Add("Контракт");
            #endregion
        }
        
        #region Properties
        public WinButton UIПродолжитьButton
        {
            get
            {
                if ((this.mUIПродолжитьButton == null))
                {
                    this.mUIПродолжитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПродолжитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Продолжить";
                    this.mUIПродолжитьButton.WindowTitles.Add("Контракт");
                    #endregion
                }
                return this.mUIПродолжитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПродолжитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Рабочий стол 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow11 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDialog
        {
            get
            {
                if ((this.mUIItemDialog == null))
                {
                    this.mUIItemDialog = new WinControl(this);
                    #region Условия поиска
                    this.mUIItemDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    #endregion
                }
                return this.mUIItemDialog;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDialog;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIРабочееместоинженераWindow : WinWindow
    {
        
        public UIРабочееместоинженераWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Рабочее место инженера";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Рабочее место инженера");
            #endregion
        }
        
        #region Properties
        public UIДобавитьWindow2 UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow2(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UIСбросWindow1 UIСбросWindow
        {
            get
            {
                if ((this.mUIСбросWindow == null))
                {
                    this.mUIСбросWindow = new UIСбросWindow1(this);
                }
                return this.mUIСбросWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIДобавитьWindow2 mUIДобавитьWindow;
        
        private UIСбросWindow1 mUIСбросWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДобавитьWindow2 : WinWindow
    {
        
        public UIДобавитьWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button4";
            this.WindowTitles.Add("Рабочее место инженера");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Рабочее место инженера");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСбросWindow1 : WinWindow
    {
        
        public UIСбросWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button2";
            this.WindowTitles.Add("Рабочее место инженера");
            #endregion
        }
        
        #region Properties
        public WinButton UIСбросButton
        {
            get
            {
                if ((this.mUIСбросButton == null))
                {
                    this.mUIСбросButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСбросButton.SearchProperties[WinButton.PropertyNames.Name] = "Сброс";
                    this.mUIСбросButton.WindowTitles.Add("Рабочее место инженера");
                    #endregion
                }
                return this.mUIСбросButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСбросButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIАвтоWindow : WinWindow
    {
        
        public UIАвтоWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Авто";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public UIComboBox1Window UIComboBox1Window
        {
            get
            {
                if ((this.mUIComboBox1Window == null))
                {
                    this.mUIComboBox1Window = new UIComboBox1Window(this);
                }
                return this.mUIComboBox1Window;
            }
        }
        
        public UITextBox2Window2 UITextBox2Window
        {
            get
            {
                if ((this.mUITextBox2Window == null))
                {
                    this.mUITextBox2Window = new UITextBox2Window2(this);
                }
                return this.mUITextBox2Window;
            }
        }
        
        public UITextBox3Window1 UITextBox3Window
        {
            get
            {
                if ((this.mUITextBox3Window == null))
                {
                    this.mUITextBox3Window = new UITextBox3Window1(this);
                }
                return this.mUITextBox3Window;
            }
        }
        
        public UIListBox1Window UIListBox1Window
        {
            get
            {
                if ((this.mUIListBox1Window == null))
                {
                    this.mUIListBox1Window = new UIListBox1Window(this);
                }
                return this.mUIListBox1Window;
            }
        }
        
        public UITextBox4Window1 UITextBox4Window
        {
            get
            {
                if ((this.mUITextBox4Window == null))
                {
                    this.mUITextBox4Window = new UITextBox4Window1(this);
                }
                return this.mUITextBox4Window;
            }
        }
        
        public UITextBox5Window1 UITextBox5Window
        {
            get
            {
                if ((this.mUITextBox5Window == null))
                {
                    this.mUITextBox5Window = new UITextBox5Window1(this);
                }
                return this.mUITextBox5Window;
            }
        }
        
        public UITextBox6Window1 UITextBox6Window
        {
            get
            {
                if ((this.mUITextBox6Window == null))
                {
                    this.mUITextBox6Window = new UITextBox6Window1(this);
                }
                return this.mUITextBox6Window;
            }
        }
        
        public UITextBox7Window2 UITextBox7Window
        {
            get
            {
                if ((this.mUITextBox7Window == null))
                {
                    this.mUITextBox7Window = new UITextBox7Window2(this);
                }
                return this.mUITextBox7Window;
            }
        }
        
        public UITextBox8Window UITextBox8Window
        {
            get
            {
                if ((this.mUITextBox8Window == null))
                {
                    this.mUITextBox8Window = new UITextBox8Window(this);
                }
                return this.mUITextBox8Window;
            }
        }
        
        public UITextBox9Window UITextBox9Window
        {
            get
            {
                if ((this.mUITextBox9Window == null))
                {
                    this.mUITextBox9Window = new UITextBox9Window(this);
                }
                return this.mUITextBox9Window;
            }
        }
        
        public UITextBox10Window1 UITextBox10Window
        {
            get
            {
                if ((this.mUITextBox10Window == null))
                {
                    this.mUITextBox10Window = new UITextBox10Window1(this);
                }
                return this.mUITextBox10Window;
            }
        }
        
        public UITextBox11Window UITextBox11Window
        {
            get
            {
                if ((this.mUITextBox11Window == null))
                {
                    this.mUITextBox11Window = new UITextBox11Window(this);
                }
                return this.mUITextBox11Window;
            }
        }
        
        public UIСохранитьWindow1 UIСохранитьWindow
        {
            get
            {
                if ((this.mUIСохранитьWindow == null))
                {
                    this.mUIСохранитьWindow = new UIСохранитьWindow1(this);
                }
                return this.mUIСохранитьWindow;
            }
        }
        
        public UIАвтоTitleBar UIАвтоTitleBar
        {
            get
            {
                if ((this.mUIАвтоTitleBar == null))
                {
                    this.mUIАвтоTitleBar = new UIАвтоTitleBar(this);
                }
                return this.mUIАвтоTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBox1Window mUIComboBox1Window;
        
        private UITextBox2Window2 mUITextBox2Window;
        
        private UITextBox3Window1 mUITextBox3Window;
        
        private UIListBox1Window mUIListBox1Window;
        
        private UITextBox4Window1 mUITextBox4Window;
        
        private UITextBox5Window1 mUITextBox5Window;
        
        private UITextBox6Window1 mUITextBox6Window;
        
        private UITextBox7Window2 mUITextBox7Window;
        
        private UITextBox8Window mUITextBox8Window;
        
        private UITextBox9Window mUITextBox9Window;
        
        private UITextBox10Window1 mUITextBox10Window;
        
        private UITextBox11Window mUITextBox11Window;
        
        private UIСохранитьWindow1 mUIСохранитьWindow;
        
        private UIАвтоTitleBar mUIАвтоTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIComboBox1Window : WinWindow
    {
        
        public UIComboBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBox1";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBox1ComboBox
        {
            get
            {
                if ((this.mUIComboBox1ComboBox == null))
                {
                    this.mUIComboBox1ComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIComboBox1ComboBox.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUIComboBox1ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBox1ComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox2Window2 : WinWindow
    {
        
        public UITextBox2Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox2";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox2Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Брэнд";
                    this.mUITextBox2Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox3Window1 : WinWindow
    {
        
        public UITextBox3Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox3";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox3Edit
        {
            get
            {
                if ((this.mUITextBox3Edit == null))
                {
                    this.mUITextBox3Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox3Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Марка";
                    this.mUITextBox3Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox3Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox3Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIListBox1Window : WinWindow
    {
        
        public UIListBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listBox1";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinList UIListBox1List
        {
            get
            {
                if ((this.mUIListBox1List == null))
                {
                    this.mUIListBox1List = new WinList(this);
                    #region Условия поиска
                    this.mUIListBox1List.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUIListBox1List;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIListBox1List;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox4Window1 : WinWindow
    {
        
        public UITextBox4Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox4";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox4Edit
        {
            get
            {
                if ((this.mUITextBox4Edit == null))
                {
                    this.mUITextBox4Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox4Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Коробка передач";
                    this.mUITextBox4Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox4Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox4Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox5Window1 : WinWindow
    {
        
        public UITextBox5Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox5";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox5Edit
        {
            get
            {
                if ((this.mUITextBox5Edit == null))
                {
                    this.mUITextBox5Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox5Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Цвет";
                    this.mUITextBox5Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox5Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox5Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox6Window1 : WinWindow
    {
        
        public UITextBox6Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox6";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox6Edit
        {
            get
            {
                if ((this.mUITextBox6Edit == null))
                {
                    this.mUITextBox6Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox6Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Лошадиных сил";
                    this.mUITextBox6Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox6Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox6Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox7Window2 : WinWindow
    {
        
        public UITextBox7Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox7";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox7Edit
        {
            get
            {
                if ((this.mUITextBox7Edit == null))
                {
                    this.mUITextBox7Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox7Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox7Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox7Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox8Window : WinWindow
    {
        
        public UITextBox8Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox8";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox8Edit
        {
            get
            {
                if ((this.mUITextBox8Edit == null))
                {
                    this.mUITextBox8Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox8Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Объем двигателя";
                    this.mUITextBox8Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox8Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox8Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox9Window : WinWindow
    {
        
        public UITextBox9Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox9";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox9Edit
        {
            get
            {
                if ((this.mUITextBox9Edit == null))
                {
                    this.mUITextBox9Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox9Edit.SearchProperties[WinEdit.PropertyNames.Name] = "1-2 дня";
                    this.mUITextBox9Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox9Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox9Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox10Window1 : WinWindow
    {
        
        public UITextBox10Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox10";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox10Edit
        {
            get
            {
                if ((this.mUITextBox10Edit == null))
                {
                    this.mUITextBox10Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox10Edit.SearchProperties[WinEdit.PropertyNames.Name] = "3-5 дней ";
                    this.mUITextBox10Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox10Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox10Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBox11Window : WinWindow
    {
        
        public UITextBox11Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox11";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox11Edit
        {
            get
            {
                if ((this.mUITextBox11Edit == null))
                {
                    this.mUITextBox11Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox11Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Цены за количество дней:.";
                    this.mUITextBox11Edit.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUITextBox11Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox11Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIСохранитьWindow1 : WinWindow
    {
        
        public UIСохранитьWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button2";
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinButton UIСохранитьButton
        {
            get
            {
                if ((this.mUIСохранитьButton == null))
                {
                    this.mUIСохранитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIСохранитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Сохранить";
                    this.mUIСохранитьButton.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUIСохранитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIСохранитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIАвтоTitleBar : WinTitleBar
    {
        
        public UIАвтоTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Авто");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Авто");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
}
